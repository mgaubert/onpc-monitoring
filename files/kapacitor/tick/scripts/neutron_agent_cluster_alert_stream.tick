// Copyright 2018, OpenNext SAS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Alert: neutron_agent_cluster_alert_stream
// Define: kapacitor define neutron_agent_cluster_alert_stream -type stream \
//           -tick neutron_agent_cluster_alert_stream.tick -dbrp telegraf.autogen
// Enable: kapacitor enable neutron_agent_cluster_alert_stream
//
dbrp "telegraf"."autogen"

var warn = 2/3
var crit = 1/3

stream
  |from()
    .database('telegraf')
    .retentionPolicy('autogen')
    .measurement('openstack_neutron_agents_percent_value')
    .groupBy('instance', 'region')
    .where(lambda: "type_instance" == 'up')
  |last('value')
    .as('stat')
  |alert()
    .id('{{ index .Tags "environment" }}/{{ index .Tags "region" }}/neutron/{{ index .Tags "instance" }}/cluster_status')
    .message('{{ .ID }}: [{{ .Level }}] Availability state of "{{ index .Tags "instance" }}" cluster is less than {{ index .Fields "stat" | printf "%0.2f" }}%')
    .info(lambda: "stat" > warn)
    .warn(lambda: "stat" <= warn)
    .crit(lambda: "stat" <= crit)
    .log('/tmp/neutron_agent_cluster_alert_log.txt')
    .topic('openstack')
