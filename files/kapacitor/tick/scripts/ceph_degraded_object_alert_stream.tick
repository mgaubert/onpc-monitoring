// Copyright 2018, OpenNext SAS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Parameters
var info = 0.0
var warn = 25.0
var crit = 50.0
var period = 5m 
var every = 5m

// Dataframe
var rawdata = stream
  |from()
    .database('telegraf')
    .retentionPolicy('autogen')
    .measurement('ceph')
    .groupBy('region')
  |window()
    .period(period)
    .every(every)
    .align()

var total = rawdata
  |mean('num_object')
    .as('value')

var degraded = rawdata
  |mean('num_object_degraded')
    .as('value')

var data = total
  |join(degraded)
    .as('total', 'degraded')

// Thresholds
var alert = data 
  |eval(lambda: float(("degraded.value")/float("total.value") * 100))
    .as('stat')
  |alert()
    .id('{{ index .Tags "environment" }}/{{ index .Tags "region" }}/ceph/osd/degraded_objects')
    .message('{{ .ID }}: [{{ .Level }}] Count of Ceph degraded objects is {{ index .Fields "stat" | printf "%0.2f" }}%')
    .info(lambda: "stat" <= info)
    .warn(lambda: "stat" <= warn)
    .crit(lambda: "stat" <= crit)
    .topic('ceph')
//  .log('/var/log/kapacitor/ceph_degraded_objects_alert.log')
    
    