// mem_alert_stream
//
// metric: used_percent
// available_fields: "active","available","available_percent","buffered","cached","free","inactive","total","used"
//
// TELEGRAF CONFIGURATION
// [[inputs.mem]]
//
// DEFINE: kapacitor define mem_alert_stream -type stream -tick mem/mem_alert_stream.tick -dbrp telegraf.autogen
// ENABLE: kapacitor enable mem_alert_stream
//
// Parameters
var info = 60.0
var warn = 80.0 
var crit = 90.0
var period = 5m 
var every = 5m

// Dataframe
var data = stream
  |from()
    .database('telegraf')
    .retentionPolicy('autogen')
    .measurement('mem')
    .groupBy('region', 'host')
  |window()
    .period(period)
    .every(every)
  |mean('used_percent')
    .as('stat')

// Thresholds
var alert = data
  |alert()
//    .id('{{ index .Tags "environment" }}/{{ index .Tags "region" }}/{{ index .Tags "host" }}/memory')
    .id('memory-alert')
    .message('{{ .ID }}: [{{ .Level }}] {{ index .Tags "host" }}: Memory usage = {{ index .Fields "stat" | printf "%0.2f" }}%')
    .info(lambda: "stat" >= info)
    .warn(lambda: "stat" >= warn)
    .crit(lambda: "stat" >= crit)
    .topic('system')
 // .log('/var/log/kapacitor/mem_alert.log')
