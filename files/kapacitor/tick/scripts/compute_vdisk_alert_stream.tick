// Copyright 2018, OpenNext SAS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Alert: compute_disk_alert_stream
// Define: kapacitor define compute_vdisk_alert_stream -type stream \
//           -tick compute_vdisk_alert_stream.tick -dbrp telegraf.autogen
// Enable: kapacitor enable compute_vdisk_alert_stream
//

dbrp "telegraf"."autogen"

// Parameters
var info = 50 
var warn = 80 
var crit = 90
var period = 1m 
var every = 1m

// Dataframe
var rawdata = stream
  |from()
    .database('telegraf')
    .retentionPolicy('autogen')
    .measurement('openstack_compute_value')
    .groupBy('region')
  |window()
    .period(period)
    .every(every)
    .align()

var available = rawdata
  
  |where(lambda: "instance" == 'total_free_disk')
  |mean('value')
    .as('value')

var in_use = rawdata
  |where(lambda: "instance" == 'total_used_disk')
  |mean('value')
    .as('value')

var data = available
  |join(in_use)
    .as('available', 'in_use')

// Thresholds
var alert = data 
  |eval(lambda: float("in_use.value")/float("available.value") * 100.0)
    .as('stat')
  |alert()
    .id('{{ index .Tags "environment" }}/{{ index .Tags "region" }}/compute/disk-usage/percent')
    .message('{{ .ID }}: [{{ .Level }}] Compute disk capacity in use is {{ index .Fields "stat" | printf "%0.2f" }}%')
    .info(lambda: "stat" >= info)
    .warn(lambda: "stat" >= warn)
    .crit(lambda: "stat" >= crit)
    .topic('openstack')

alert
    .log('/tmp/compute_disk_alert_log.txt')