// disk_alert_stream
//
// metric: used_percent
// available_fields: free","inodes_free","inodes_total","inodes_used","total","used"
//
// TELEGRAF CONFIGURATION
// [[inputs.disk]]
//   ignore_fs = ["tmpfs", "devtmpfs"]
//
// DEFINE: kapacitor define disk_alert_stream -type stream -tick disk/disk_alert_stream.tick -dbrp telegraf.autogen
// ENABLE: kapacitor enable disk_alert_stream

// Parameters
dbrp "telegraf"."autogen"

var info = 70
var warn = 80
var crit = 90
var period = 10s
var every = 10s

// Dataframe
var data = stream
  |from()
    .database('telegraf')
    .retentionPolicy('autogen')
    .measurement('disk')
    .groupBy('region', 'host', 'path')
  |where(lambda: "node_type" == 'host')
  |window()
    .period(period)
    .every(every)
  |mean('used_percent')
    .as('stat')

// Thresholds
var alert = data
  |alert()
    .id('{{ index .Tags "environment" }}/{{ index .Tags "region" }}/{{ index .Tags "host" }}/{{ index .Tags "path" }}/disk')
    .message('{{ .ID }}: [{{ .Level }}] Disk usage is {{ index .Fields "stat" | printf "%0.2f" }}%')
    .info(lambda: "stat" >= info)
    .warn(lambda: "stat" >= warn)
    .crit(lambda: "stat" >= crit)
    .topic('system')

// Alert
alert
  .log('/tmp/disk_alert_log.txt')
