// Copyright 2018, OpenNext SAS
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Alert:  haproxy_backend_alert
// Define: kapacitor define haproxy_backend_error_alert_stream -type stream \
//           -tick haproxy_backend_error_alert_stream.tick -dbrp telegraf.autogen
// Enable: kapacitor enable haproxy_backend_state_alert_stream


// Parameters

var info = 0.3
var warn = 0.9
var crit = 2.7
var period = 1m 
var every = 1m
var unit = 1s

var rawdata = batch
  |query('''SELECT econ, dresp, eresp FROM "telegraf"."autogen"."haproxy" WHERE type = 'server' ''')
    .period(period)
    .every(every)
    .groupBy('region', 'host', 'proxy', 'sv')

var econ = rawdata
  |derivative('econ')
    .as('value')
    .nonNegative()
    .unit(unit)
    
var dresp = rawdata
  |derivative('dresp')
    .as('value')
    .nonNegative()
    .unit(unit)

var eresp = rawdata
  |derivative('eresp')
    .as('value')
    .nonNegative()
    .unit(unit)

var data = econ 
  |join(dresp, eresp)
    .as('econ', 'dresp', 'eresp')

// Thresholds
var alert = data
  |alert()
//    .id('{{ index .Tags "environment" }}/{{ index .Tags "region" }}/{{ index .Tags "host" }}/{{ index .Tags "proxy" }}/backend_errors')
    .id('haproxy-{{ index .Tags "proxy" }}-errors-alert')
    .message('{{ .ID }}: [{{ .Level }}] {{ index .Tags "proxy" }}: econ={{ index .Fields "econ.value" }} dresp={{ index .Fields "dresp.value" }} eresp={{ index .Fields "eresp.value" }}')
    .info(lambda: "econ.value" >= info OR "dresp.value" >= info OR "eresp.value" >= info)
    .warn(lambda: "econ.value" >= warn OR "dresp.value" >= warn OR "eresp.value" >= warn)
    .crit(lambda: "econ.value" >= crit OR "dresp.value" >= crit OR "eresp.value" >= crit)
    .topic('haproxy')
//  .log('/var/log/kapacitor/haproxy_backend_error_alert.log')
