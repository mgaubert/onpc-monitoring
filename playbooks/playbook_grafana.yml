---
# Copyright 2016, Rackspace US, Inc.
# Copyright 2018, OpenNext SAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Deploy Grafana
  hosts: "grafana"
  gather_facts: true
  become: true
  become_user: root
  environment: "{{ deployment_environment_variables | default({}) }}"
  pre_tasks:
    # Disable grafana haproxy backend to avoid false positive alerts.
    - include: /opt/openstack-ansible/playbooks/common-tasks/haproxy-endpoint-manage.yml
      vars:
        haproxy_backend: grafana-back
        haproxy_state: disabled
      when:
        - "'grafana' in group_names"
        - "groups['grafana'] | length > 1"
      tags: [grafana-disable-haproxy]
    - include: "/opt/openstack-ansible/playbooks/common-tasks/os-{{ container_tech | default('lxc') }}-container-setup.yml"
      when:
        - "inventory_hostname in groups['all_containers']"
    - include: /opt/openstack-ansible/playbooks/common-tasks/os-log-dir-setup.yml
      vars:
        log_dirs:
          - src: "/openstack/log/{{ inventory_hostname }}-grafana"
            dest: "{{ grafana_logs_dir }}"
    - include: /opt/openstack-ansible/playbooks/common-tasks/package-cache-proxy.yml
    - name: Create DB for the service
      mysql_db:
        login_user: "{{ galera_root_user }}"
        login_password: "{{ galera_root_password }}"
        login_host: "{{ galera_address|default('127.0.0.1') }}"
        name: "{{ grafana_db_name }}"
        state: "present"
      delegate_to: "{{ groups['galera_all'][0] }}"
      no_log: true
      tags: [grafana-database]

    - name: Grant access to the DB for the service
      mysql_user:
        login_user: "{{ galera_root_user }}"
        login_password: "{{ galera_root_password }}"
        login_host: "{{ galera_address|default('127.0.0.1') }}"
        name: "{{ grafana_db_user }}"
        password: "{{ grafana_db_password_secret }}"
        host: "{{ item }}"
        state: "present"
        priv: "{{ grafana_db_name }}.*:ALL"
      delegate_to: "{{ groups['galera_all'][0] }}"
      with_items:
        - "localhost"
        - "%"
      no_log: true
      tags: [grafana-database]

  roles:
    - role: grafana
      http_proxy: "{{ deployment_environment_variables.http_proxy | default('') }}"
      https_proxy: "{{ deployment_environment_variables.https_proxy | default('') }}"
      no_proxy: "{{ deployment_environment_variables.no_proxy | default('') }}"
      tags: [grafana-install]

    - role: rsyslog_client
      rsyslog_client_log_rotate_file: grafana_log_rotate
      rsyslog_client_log_dir: "{{ grafana_logs_dir }}"
      rsyslog_client_config_name: "99-grafana-rsyslog-client.conf"
      tags: [grafana-rsyslog]
  
  post_tasks:
    - name: Create local grafana dashboard directory
      file:
        path: /tmp/dashboards
        state: directory
        mode: 0755
      run_once: yes
      delegate_to: localhost
      tags: [grafana-dashboard]

    - name: Copy selected dashboards
      copy:
        src: "../grafana-dashboards/{{ item.name }}.json"
        dest: "/tmp/dashboards/{{ item.name }}.json"
      with_items: "{{ onpc_grafana_dashboards }}"
      delegate_to: localhost
      run_once: yes
      tags: [grafana-dashboards]

    - name: Set the correct data source name in the dashboard
      replace:
        path: "/tmp/dashboards/{{ item.name }}.json"
        regexp: '"(?:\${)?DS_[A-Z]+(?:})?"'
        replace: '"{{ item.datasource }}"'
      delegate_to: localhost
      run_once: yes
      with_items: "{{ onpc_grafana_dashboards }}"
      tags: [grafana-dashboards]

    - name: Import grafana dashboards
      uri:
        url: "{{ grafana_url }}/api/dashboards/db"
        user: "{{ grafana_security.admin_user }}"
        password: "{{ grafana_security.admin_password }}"
        force_basic_auth: yes
        method: POST
        body_format: json
        body: '{ "dashboard": {{ lookup("file", item) }}, "overwrite": true }'
      no_log: true
      with_fileglob:
        - /tmp/dashboards/*
      tags: [grafana-dashboards]

    - include: /opt/openstack-ansible/playbooks/common-tasks/haproxy-endpoint-manage.yml
      vars:
        haproxy_backend: grafana-back
        haproxy_state: enabled
      when:
        - "'grafana' in group_names"
        - "groups['grafana'] | length > 1"
      tags: [grafana-enable-haproxy]

