---
# Copyright 2016, Rackspace US, Inc.
# Copyright 2018, OpenNext SAS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Deploy InfluxDB
  hosts: "influxdb"
  gather_facts: true
  user: root
  environment: "{{ onpc_environment_variables | default({}) }}"
  pre_tasks:
    - include: /opt/openstack-ansible/playbooks/common-tasks/haproxy-endpoint-manage.yml
      vars:
        haproxy_backend: influxdb_admin-back
        haproxy_state: disabled
      when:
        - "'influxdb' in group_names"
        - "groups['influxdb'] | length > 1"
      tags: [influxdb-admin-disable-haproxy]
    - include: /opt/openstack-ansible/playbooks/common-tasks/haproxy-endpoint-manage.yml
      vars:
        haproxy_backend: influxdb-back
        haproxy_state: disabled
      when:
        - "'influxdb' in group_names"
        - "groups['influxdb'] | length > 1"
      tags: [influxdb-disable-haproxy]   
    - include: "/opt/openstack-ansible/playbooks/common-tasks/os-{{ container_tech | default('lxc') }}-container-setup.yml"
      static: no
      vars:
        list_of_bind_mounts: "{{ influxdb_container_bind_mounts }}"
      tags: [influxdb-bind-mounts]
    - include: /opt/openstack-ansible/playbooks/common-tasks/os-log-dir-setup.yml
      vars:
        log_dirs:
          - src: "/openstack/log/{{ inventory_hostname }}-influxdb"
            dest: "{{ influxdb_logs_dir }}"
    - include: /opt/openstack-ansible/playbooks/common-tasks/package-cache-proxy.yml

  # This tasks shoud be moved into a role...  
  tasks:  
    - name: Import InfluxDB GPG signing key 
      apt_key:
        url: "https://repos.influxdata.com/influxdb.key"
        state: "present"
      tags: [influxdb-install]
    - name: Add influxdata repository
      apt_repository:
        repo: "deb https://repos.influxdata.com/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: "present"
        update_cache: yes
      tags: [influxdb-install]
    - name: Install influxdb
      apt:
        pkg: "influxdb"
        state: "latest"
      tags: [influxdb-install]
    - name: Drop in influxdb config file
      template:
        src: ../templates/influxdb/influxdb.conf.j2
        dest: /etc/influxdb/influxdb.conf
      tags: [influxdb-configure]
    - name: Enable and restart influxdb
      service:
        name: "influxdb"
        enabled: true
        state: restarted
      tags: [influxdb-configure]
    - name: Wait for influxdb to be ready
      wait_for:
        host: "{{ hostvars[item]['ansible_host'] }}"
        port: "{{ influxdb_port }}"
        delay: 1
      with_items: "{{ groups['influxdb'] }}"
      tags: [influxdb-configure]
    - name: Check whether the metrics DB already exists or not
      shell: >
        influx -username {{ influxdb_db_root_name }}
        -password {{ influxdb_db_root_password }}
        -execute 'SHOW DATABASES' -format=json
      register: result
      changed_when: false
      tags: [influxdb-configure]
    - name: Create metrics DB
      shell: >
        influx -username {{ influxdb_db_root_name }}
        -password {{ influxdb_db_root_password }}
        -execute "{{ item }}"
      with_items:
        - "CREATE DATABASE {{ influxdb_db_name }}"
        - "CREATE RETENTION POLICY {{ influxdb_db_retention_policy }} ON {{ influxdb_db_name }} DURATION {{ influxdb_db_retention }} REPLICATION {{ influxdb_db_replication }}"
        - "CREATE USER {{ influxdb_db_metric_user }} WITH PASSWORD '{{ influxdb_db_metric_password }}'"
        - "GRANT ALL ON {{ influxdb_db_name }} TO {{ influxdb_db_metric_user }}"
      when: result.stdout.find(influxdb_db_name) == -1
      tags: [influxdb-configure]
      notify: InfluxDB restart
  
  roles:
    - role: "rsyslog_client"
      rsyslog_client_log_rotate_file: influxdb_log_rotate
      rsyslog_client_log_dir: "{{ influxdb_logs_dir }}"
      rsyslog_client_config_name: "99-influxdb-rsyslog-client.conf"
      tags: [influxdb-rsyslog]

  post_tasks:
    - include: /opt/openstack-ansible/playbooks/common-tasks/haproxy-endpoint-manage.yml
      vars:
        haproxy_backend: influxdb_admin-back
        haproxy_state: enabled
      when:
        - "'influxdb' in group_names"
        - "groups['influxdb'] | length > 1"
      tags: [influxdb_admin-enable-haproxy]
    - include: /opt/openstack-ansible/playbooks/common-tasks/haproxy-endpoint-manage.yml
      vars:
        haproxy_backend: influxdb-back
        haproxy_state: enabled
      when:
        - "'influxdb' in group_names"
        - "groups['influxdb'] | length > 1"
      tags: [influxdb-enable-haproxy]
  
  handlers:
    - name: InfluxDB restart
      service: name=influxdb state=restarted
