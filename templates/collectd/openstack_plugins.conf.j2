# This file was generated by Ansible for {{ansible_fqdn}}
# Do NOT modify this file by hand!

{% if inventory_hostname in groups['collectd'] or
      (inventory_hostname in groups['nova_compute'] and
      (nova_virt_type | default('qemu') in ['kvm', 'qemu'])) %}

# Python plugin for Collectd
<LoadPlugin python>
  Globals true
</LoadPlugin>

<Plugin "python">
  ModulePath "{{ collectd_plugins_dir }}/collectd-modules"
  LogTraces false
  Interactive false

{% if inventory_hostname in groups['collectd'] %}

  Import "openstack_check_apis"

  <Module "openstack_check_apis">
    KeystoneUrl "{{ keystone_service_internaluri }}"
    Password "{{ monitoring_user_password_secret }}"
    Tenant "{{ monitoring_tenant_name }}"
    Username "{{ monitoring_user_name }}"
    Region "{{ service_region }}"
  </Module>

  Import "openstack_cinder"

  <Module "openstack_cinder">
    KeystoneUrl "{{ keystone_service_internaluri }}"
    Password "{{ monitoring_user_password_secret_secret }}"
    Tenant "{{ monitoring_tenant_name }}"
    Username "{{ monitoring_user_name }}"
    Region "{{ service_region }}"
  </Module>

  Import "openstack_cinder_services"

  <Module "openstack_cinder_services">
    KeystoneUrl "{{ keystone_service_internaluri }}"
    Password "{{ monitoring_user_password_secret }}"
    Tenant "{{ monitoring_tenant_name }}"
    Username "{{ monitoring_user_name }}"
    Region "{{ service_region }}"
  </Module>

  Import "openstack_glance"

  <Module "openstack_glance">
    KeystoneUrl "{{ keystone_service_internaluri }}"
    Password "{{ monitoring_user_password_secret }}"
    Tenant "{{ monitoring_tenant_name }}"
    Username "{{ monitoring_user_name }}"
    Region "{{ service_region }}"
  </Module>

  Import "openstack_keystone"

  <Module "openstack_keystone">
    KeystoneUrl "{{ keystone_service_internaluri }}"
    Password "{{ monitoring_user_password_secret }}"
    Tenant "{{ monitoring_tenant_name }}"
    Username "{{ monitoring_user_name }}"
    Region "{{ service_region }}"
  </Module>

  Import "openstack_neutron"

  <Module "openstack_neutron">
    KeystoneUrl "{{ keystone_service_internaluri }}"
    Password "{{ monitoring_user_password_secret }}"
    Tenant "{{ monitoring_tenant_name }}"
    Username "{{ monitoring_user_name }}"
    Region "{{ service_region }}"
  </Module>

  Import "openstack_neutron_agents"

  <Module "openstack_neutron_agents">
    KeystoneUrl "{{ keystone_service_internaluri }}"
    Password "{{ monitoring_user_password_secret }}"
    Tenant "{{ monitoring_tenant_name }}"
    Username "{{ monitoring_user_name }}"
    Region "{{ service_region }}"
  </Module>

  Import "openstack_nova"

  <Module "openstack_nova">
    KeystoneUrl "{{ keystone_service_internaluri }}"
    Password "{{ monitoring_user_password_secret }}"
    Tenant "{{ monitoring_tenant_name }}"
    Username "{{ monitoring_user_name }}"
    Region "{{ service_region }}"
  </Module>

  Import "openstack_nova_services"

  <Module "openstack_nova_services">
    KeystoneUrl "{{ keystone_service_internaluri }}"
    Password "{{ monitoring_user_password_secret }}"
    Tenant "{{ monitoring_tenant_name }}"
    Username "{{ monitoring_user_name }}"
    Region "{{ service_region }}"
  </Module>

  Import "openstack_compute"

  <Module "openstack_compute">
    CpuAllocationRatio "{{ nova_cpu_allocation_ratio }}"
    KeystoneUrl "{{ keystone_service_internaluri }}"
    Password "{{ monitoring_user_password_secret }}"
    Tenant "{{ monitoring_tenant_name }}"
    Username "{{ monitoring_user_name }}"
    Region "{{ service_region }}"
  </Module>

{% else %}

  Import "libvirt_check"

  <Module "libvirt_check">
    Uri "qemu:///system"
    PollingInterval 60
    Region "{{ service_region }}"
  </Module>
  
{% endif %}
</Plugin>  
{% endif %}